name: CI

on:
  push:
    branches: [ main ]
    tags:
      - "*"
  pull_request:
    branches: [ main ]
  schedule:
  - cron:  '0 0 * * *'
  workflow_dispatch:

jobs:

  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install poetry
      run: pipx install poetry && poetry self add poetry-dynamic-versioning
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: poetry
    - name: Install dependencies
      run: poetry install
    - name: Docs
      run: |
        poetry run meowlflow openapi --schema-path=examples/document_splitter_schema.py > examples/document_splitter_schema.json
        make README.md -B
        DIFF="$(git status --porcelain 2>/dev/null | awk '{print $2}')"
        if [ -n "$DIFF" ]; then
          printf 'The following files are out of date:\n\n%s\n' "$DIFF"
          exit 1
        fi

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install poetry
      run: pipx install poetry
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: poetry
    - name: Install dependencies
      run: poetry install
    - name: flake8
      run: make flake8
    - name: black
      run: make black-test

  smoke:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install poetry
      run: pipx install poetry
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: poetry
    - name: Test
      run: |
        pip install .
        python -c "from meowlflow.serve import app"

  types:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install poetry
      run: pipx install poetry
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: poetry
    - name: Install dependencies
      run: poetry install
    - name: mypy
      run: poetry run mypy e2e examples meowlflow

  e2e:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install poetry
      run: pipx install poetry && poetry self add poetry-dynamic-versioning
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: poetry
    - name: Install dependencies
      run: poetry install
    - name: e2e
      run: make e2e

  container:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Build container
      uses: docker/build-push-action@v2
      with:
        context: .

  dependencies:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install poetry
      run: pipx install poetry
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: poetry
    - name: Check dependencies
      run: poetry lock --check

  dist:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install poetry
      run: pipx install poetry && poetry self add poetry-dynamic-versioning
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: poetry
    - name: Tag version
      run: |
        if ! git describe --tags --exact-match 2>/dev/null; then
          # If this commit doesn't correspond to a tag, then tag with something we won't use.
          git tag 0.0.0-rc$GITHUB_RUN_ID
        fi
    - name: Build dist
      run: poetry build
    - name: Publish package to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
        skip_existing: true
        verbose: true

  push:
    if: github.event_name != 'pull_request'
    needs:
    - docs
    - lint
    - smoke
    - types
    - e2e
    - container
    - dependencies
    - dist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Determine SHA
      id: sha
      run: echo "::set-output name=sha::$(git describe --always --tags --dirty)"
    - name: Build and push
      id: push
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        platforms: linux/arm64, linux/amd64
        tags: ghcr.io/connylabs/meowlflow:latest, ghcr.io/connylabs/meowlflow:${{ steps.sha.outputs.sha }}
    - name: Determine digest
      run: echo ${{ steps.push.outputs.digest }}

  publish:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    needs:
    - docs
    - lint
    - smoke
    - types
    - e2e
    - container
    - dependencies
    - dist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install poetry
      run: pipx install poetry && poetry self add poetry-dynamic-versioning
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Build dist
      run: poetry build
    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
